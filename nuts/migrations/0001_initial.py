# Generated by Django 5.1.3 on 2025-01-05 10:53

import django.db.models.deletion
import django_extensions.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('broadcast_title', models.CharField(max_length=255)),
                ('episode_alias', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(choices=[('published', 'Published'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('start_timestamp', models.DateTimeField()),
                ('end_timestamp', models.DateTimeField()),
                ('broadcast', models.DateTimeField()),
                ('mixcloud_url', models.URLField(blank=True)),
            ],
            options={
                'ordering': ['-broadcast'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('bio', models.TextField(blank=True)),
                ('image_url', models.URLField(blank=True)),
                ('social_links', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mood',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Broadcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('start_timestamp', models.DateTimeField()),
                ('end_timestamp', models.DateTimeField()),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='broadcasts', to='nuts.channel')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='broadcasts', to='nuts.episode')),
            ],
            options={
                'ordering': ['start_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AudioSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('url', models.URLField()),
                ('source', models.CharField(max_length=50)),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audio_sources', to='nuts.episode')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='episode',
            name='genres',
            field=models.ManyToManyField(blank=True, to='nuts.genre'),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('background_large', models.URLField()),
                ('background_medium_large', models.URLField()),
                ('background_medium', models.URLField()),
                ('background_small', models.URLField()),
                ('background_thumb', models.URLField()),
                ('picture_large', models.URLField()),
                ('picture_medium_large', models.URLField()),
                ('picture_medium', models.URLField()),
                ('picture_small', models.URLField()),
                ('picture_thumb', models.URLField()),
                ('episode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='nuts.episode')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='episode',
            name='moods',
            field=models.ManyToManyField(blank=True, to='nuts.mood'),
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('description_html', models.TextField(blank=True)),
                ('show_alias', models.CharField(max_length=255, unique=True)),
                ('external_links', models.JSONField(blank=True, default=list)),
                ('location_short', models.CharField(blank=True, max_length=10)),
                ('location_long', models.CharField(blank=True, max_length=255)),
                ('intensity', models.IntegerField(blank=True, null=True)),
                ('hosts', models.ManyToManyField(blank=True, related_name='shows', to='nuts.host')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='episode',
            name='show',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='nuts.show'),
        ),
    ]
